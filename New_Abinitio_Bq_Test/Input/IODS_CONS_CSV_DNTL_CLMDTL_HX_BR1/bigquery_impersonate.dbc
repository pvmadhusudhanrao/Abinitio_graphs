############################################
## BigQuery Database Configuration Information
##
## You need to edit this file once, after you create
## it. This file contains the information needed
## to connect to your BigQuery database.
##
## This file must always be named with the extension .dbc.
##
## Each line of this file must have the following form:
## <tag>:  <value>
##
## Each tag must be at the start of a line and be
## immediately followed by a colon (:). All white space
## characters, such as blanks and tabs, are ignored.
##
## This file also contains information about assigning
## and editing the values of tags.
##
## Pound signs at the beginning of a line denote
## comments. The IDB database components ignore these
## lines.
############################################

dbms: bigquery
## REQUIRED. Do not change the value of this tag from bigquery.

db_nodes: localhost
## REQUIRED. Enter the name of the machine on which your client runs.

## key_file: 
## OPTIONAL. Path to the service account JSON private key file.
## If not set, authentication must be provided through the application default
## credentials such as the GOOGLE_APPLICATION_CREDENTIALS environment variable.

impersonated_account: ${BQ_SERVICE_ACCOUNT}
## OPTIONAL. The service account to impersonate.

project: ${BQ_COMPUTE_PROJECT}
## REQUIRED. Name of the BigQuery project to which all work is charged,
## regardless of the project that the data being accessed is in.

data_project: ${BQ_STORAGE_PROJECT}
## OPTIONAL. Name of the default BigQuery project to use when a project is not
## specified in a table identifier.
## If not set, the value of the project tag will be used.

## dataset: 
## OPTIONAL. Name of the default BigQuery dataset to use when a dataset is not
## specified in a table identifier.

## location: 
## OPTIONAL. Location in which to execute BigQuery operations. Any referenced
## tables and the datasets containing them must be in the specified location.
## If not set, the default multi-regional location 'US' will be used.

gcs_bucket: ${BQ_GCS_BUCKET}
## Required only during utility mode operations.
## Set this to the Google Cloud Storage bucket name. Do not include the 'gs://'
## prefix. The bucket must already exist before being used.
##     Example:   gcs_bucket:  my-bucket

gcs_path_prefix: ${BQ_GCS_PATH}
## OPTIONAL: Specifies the location where temporary folders will be created
## during utility mode operations. These temporary folders are generated with
## unique names and will be automatically removed at the end of a job.
##     Example:   gcs_path_prefix:  your/path/here

## memory_buffer_lower_bound_bytes: 
## OPTIONAL: Specifies the initial size (in bytes) of the memory buffer used to
## process data through the BigQuery Storage API.
## If not set, the default value is 1000. This tag will be ignored if the
## configuration variable AB_IDB_MEMORY_BUFFER_LOWER_BOUND is set.

## memory_buffer_upper_bound_bytes: 
## OPTIONAL: Specifies the maximum size (in bytes) of the memory buffer used to
## process data through the BigQuery Storage API.
## The default value of 100000000 is set very large so that usually all records
## will be held in memory. This tag will be ignored if the configuration
## variable AB_IDB_MEMORY_BUFFER_UPPER_BOUND is set.

## rowset_size: 
## OPTIONAL. Specifies the number of rows to retrieve from a query at once.
## Given a certain query result set, increasing this size will decrease the
## number of fetches in which the results will be brought to the client,
## cutting down on the number of communication acts between the client and
## server. This may lead to noticeable performance improvements in environments
## with high network latency.
## default rowset size: 1000

## fully_qualify_dml: 
## OPTIONAL. If set to true, all fields will have an explicit character set and
## all integer fields will have an explicit endianness.

## minimal_charset: 
## OPTIONAL: If set to true, the OS's native character set will be used in
## generated DML for string-like data fields such as decimal, date, and
## datetime types.
## For DML records with a relatively large number of string-like fields,
## setting this tag to true (or leaving it unset) can have a substantial
## beneficial effect on performance.
## default value: true

field_type_preference: variable
## OPTIONAL. Determines the default form of data types during DML generation.
## Supported values: delimited, variable, and fixed.
## default field type preference: delimited

## quote_column_names: 
## OPTIONAL. Determines whether to quote column names in generated SQL.
## When configured in API mode with only a table name, Input and Output Table
## will generate SELECT and INSERT statements automatically. When this tag is
## true, column names in these generated SQL statements are quoted as required
## by the database catalog.
## If quoting is always desired, e.g. when a column name is a database reserved
## word, set the following 'minimal_column_quoting' tag to false.
## To turn column name quoting off completely, uncomment this tag and set its
## value to 'false'. 
## This tag can be overridden by the AB_IDB_QUOTE_COLUMN_NAMES configvar.
## default value: true

## minimal_column_quoting: 
## OPTIONAL. If set to true, only column names recognized as not following
## database catalog rules will be quoted in generated SQL. This tag will not
## have any effect if the preceding 'quote_column_names' tag is false.
## If quoting is always desired, uncomment this tag and set its value to false.
## This tag can be overridden by the AB_IDB_MINIMAL_COLUMN_QUOTING configvar.
## default value: true

## quote_catalog_objects: 
## OPTIONAL. Determines whether names read from database catalogs will be
## quoted at need, e.g. when they contain characters that are not alphanumeric,
## such as spaces. To turn quoting of browsed names off, uncomment this tag
## and set its value to false.
## This tag can be overridden by the AB_IDB_QUOTE_CATALOG_OBJECTS configvar.
## default value: true

## column_delimiter: 
## OPTIONAL. The default value of column delimiters when generating DML.
## default column delimiter: "\x01"

## dml_with_parameterized_lengths: 
## OPTIONAL.  By default BigQuery dml generated for parameterized
## STRING, BYTES and NUMERIC columns will contain explicit
## maximum_length qualifiers.   Uncomment this tag to suppress maximum 
## length information for parameterized columns.

## default_date_format: 
## OPTIONAL. The default format when generating DML for the BigQuery DATE
## column type.
## default format: YYYY-MM-DD

## default_datetime_format: 
## OPTIONAL. The default format when generating DML for the BigQuery DATETIME
## column type.
## default format: YYYY-MM-DDTHH24:MI:SS.NNNNNN

## default_time_format: 
## OPTIONAL. The default format when generating DML for the BigQuery TIME
## column type.
## default format: HH24:MI:SS.NNNNNN

## default_timestamp_format: 
## OPTIONAL. The default format when generating DML for the BigQuery TIMESTAMP
## column type.
## default format: YYYY-MM-DD HH24:MI:SS.NNNNNN

generate_dml_with_nulls: true
## OPTIONAL. If set to true, DML fields will be nullable if they reference
## database columns which allow NULL values.

## default_null_value: 
## OPTIONAL. When delimited DML is generated, fields which can be NULL are
## are given a default value of the empty string (""). Set default_null_value
## to use a different custom value to represent a NULL value.

## dml_with_structured_comments: 
## OPTIONAL. If set to true, fields in generated DML will have structured
## comments rather than plain language DML comments. For details of the names
## and values used in structured comments, see the online Help.

dml_char_length_in_characters: true
## When set to true, this tag causes DML generated for BigQuery STRING columns
## to be generated with the 'length_in_characters' keyword.

## generate_select_from_dml: 
## OPTIONAL. If set to true, then when API-mode Input Table has a table name
## specified, the generated select statement will be derived from the DML of
## the component's read port rather than a simple "select * from <table name>".

preserve_sql_whitespace: true
## OPTIONAL. This tag affects the operation of 'm_db run -sqlfile <file>'
## If set to false, leading and trailing whitespace are trimmed from each line
## in the file, and multiline sql statements are concatenated with a single
## space character.
## If set to true, no whitespace is trimmed, and multiline sql statements are
## concatenated with a newline character.
##
## A multiline quoted text string inserted into a character column will not
## contain newlines if this tag is false, and when extracted from the column
## will not retain line breaks.

storage_extract_to_tmp_table: ${BQ_EXT_TO_TEMP}
## OPTIONAL. This tag affects the behavior of storage_extract-mode Input Table
## when it is provided with a SQL query. If this tag is set to true, the query
## result will always first be saved to a BigQuery temporary table, which will
## then be unloaded via the Storage Read API. This avoids the possibility of
## fatal errors when the original query is more complex than the
## "SELECT field1, field2, ... FROM dataset.table WHERE simpleFilter" pattern
## which is generally all that the Storage Read API can directly handle.
## With this tag set to false, some queries that do not conform to the simple
## pattern may succeed, but non-simple queries in general are as likely as not
## to fail and result in fatal errors. Setting this tag to false may however
## improve performance for queries fitting the simple pattern.

## environment: 
## OPTIONAL. Uncomment this tag to set or propagate environment variables to
## all database components. Use the following form:
## environment:  <env-var>=<value>

